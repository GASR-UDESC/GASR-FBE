<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType >
<FBType Name="CIRCLE_SET_CURVE_DATA" Comment= "Circular movement secondary data" >
	<Identification Standard="61499-2"/>
	<VersionInfo Organization="Universidade do Estado de Santa Catarina" Version="1.0" Author="GASR" Date="02-05-12" />
	<CompilerInfo>
	</CompilerInfo>
	<InterfaceList>
		<EventInputs>
			<Event Name="Init" >
				<With Var="dest_angle" />
				<With Var="pos" />
				<With Var="C" />
				<With Var="U" />
				<With Var="V" />
				<With Var="R" />
			</Event>
		</EventInputs>
		<EventOutputs>
			<Event Name="Cnf" >
				<With Var="eq_id" />
				<With Var="t0" />
				<With Var="t" />
				<With Var="angle" />
				<With Var="out_pos" />
			</Event>
		</EventOutputs>
		<InputVars>
			<VarDeclaration Name="dest_angle" Type="REAL" Comment="In degrees" />
			<VarDeclaration Name="pos" Type="REAL" ArraySize="3" />
			<VarDeclaration Name="C" Type="REAL" ArraySize="3" />
			<VarDeclaration Name="U" Type="REAL" ArraySize="3" />
			<VarDeclaration Name="V" Type="REAL" ArraySize="3" />
			<VarDeclaration Name="R" Type="REAL" />
		</InputVars>
		<OutputVars>
			<VarDeclaration Name="eq_id" Type="INT" />
			<VarDeclaration Name="t0" Type="INT" />
			<VarDeclaration Name="t" Type="INT" />
			<VarDeclaration Name="angle" Type="REAL" />
			<VarDeclaration Name="out_pos" Type="REAL" ArraySize="3" />
		</OutputVars>
	</InterfaceList>
	<BasicFB>
		<ECC>
			<ECState Name="EXE" x="495.0225" y="188.5275"  >
				<ECAction Algorithm="set_data" Output="Cnf" />
			</ECState>
			<ECState Name="START" x="312.0075" y="180.81"  >
			</ECState>
			<ECTransition Source="START" Destination="EXE" Condition="Init" />
			<ECTransition Source="EXE" Destination="START" Condition="1" />
		</ECC>
		<Algorithm Name="set_data"  >
			<Lua Text=" eq_id = 2 t0 = 0 t = 1 angle = (dest_angle*2*math.pi)/360 out_pos[1] = ( C[1] + U[1]*R*math.cos( angle ) + V[1]*R*math.sin( angle ) ) out_pos[2] = ( C[2] + U[2]*R*math.cos( angle ) + V[2]*R*math.sin( angle ) ) out_pos[3] = ( C[3] + U[3]*R*math.cos( angle ) + V[3]*R*math.sin( angle ) ) print( 'circular_pos', pos[1], pos[2], pos[3], 'circle_destination', out_pos[1], out_pos[2], out_pos[3], 'center'..C[1]..','..C[2]..','..C[3], 'angle', angle ) print( 'circle U',U[1], U[2],U[3], 'circle V', V[1], V[2], V[3], 'radius', R ) print( '\n\n' )    " />
		</Algorithm>
	</BasicFB>
</FBType>