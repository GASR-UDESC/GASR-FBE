<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType >
<FBType Name="pi" Comment= "1st ordem system" >
	<Identification Standard="61499-2"/>
	<VersionInfo Author="GASR" Date="11-01-12" />
	<CompilerInfo >
	</CompilerInfo>
	<InterfaceList>
		<EventInputs>
			<Event Name="Init" >
				<With Var="u" />
			</Event>
		</EventInputs>
		<EventOutputs>
			<Event Name="Finish" >
				<With Var="x1" />
				<With Var="y" />
				<With Var="u_out" />
			</Event>
		</EventOutputs>
		<InputVars>
			<VarDeclaration Name="num" Type="REAL" ArraySize="2" />
			<VarDeclaration Name="den" Type="REAL" ArraySize="2" />
			<VarDeclaration Name="delay" Type="REAL" ArraySize="" InitialValue="0"/>
			<VarDeclaration Name="dt" Type="REAL" ArraySize="" />
			<VarDeclaration Name="u" Type="REAL" ArraySize="" />
			<VarDeclaration Name="x1_0" Type="REAL" ArraySize="" Comment="condicao inicial"/>
		</InputVars>
		<OutputVars>
			<VarDeclaration Name="x1" Type="REAL" ArraySize="" />
			<VarDeclaration Name="y" Type="REAL" ArraySize="" />
			<VarDeclaration Name="u_out" Type="REAL" ArraySize="" />
		</OutputVars>
		<InternalVars>
			<VarDeclaration Name="R11" Type="REAL" ArraySize="" />
			<VarDeclaration Name="R21" Type="REAL" ArraySize="" />
			<VarDeclaration Name="R31" Type="REAL" ArraySize="" />
			<VarDeclaration Name="R41" Type="REAL" ArraySize="" />
			<VarDeclaration Name="x1aux" Type="REAL" ArraySize="" />
			<VarDeclaration Name="input_buffer" Type="REAL" ArraySize="" />
		</InternalVars>
	</InterfaceList>
	<BasicFB>
		<ECC>
			<ECState Name="Exe" x="300" y="300"  >
				<ECAction Algorithm="EquationStep" Output="Finish" />
			</ECState>
			<ECState Name="START" x="320" y="200"  >
			</ECState>
			<ECTransition Source="Exe" Destination="START" Condition="1" />
			<ECTransition Source="START" Destination="Exe" Condition="Init" />
		</ECC>
		<Algorithm Name="EquationStep"  Comment="den[1] = b0, den[2] = b1">
			<Lua Text=" 
						if type(input_buffer) ~= 'table' then
							input_buffer = {}
							for i = 1, math.ceil(delay/dt) +2 do
								input_buffer[#input_buffer +1] = 0
							end
						end
						input_buffer[#input_buffer] = u
						u = input_buffer[1]
						for i = 1, #input_buffer-1 do
							input_buffer[i] = input_buffer[i+1]
						end
						
						local beta1 = (num[2] - den[2]*num[1])
						
						local function f1(X1, U)
							return -den[2]*X1 + beta1*U
						end
						
						
						R11 = dt*f1(x1_0, u);
						x1aux = x1_0 + 0.5*R11
						
						R21 = dt*f1(x1aux, u);
						
						x1aux = x1aux + 0.5*R21
						
						R31 = dt*f1(x1aux, u);
						
						x1aux = x1aux + 0.5*R31
						
						R41 = dt*f1(x1aux, u);
						
						x1 = x1_0 + (1/6)*(R11 + 2*R21 + 2*R31 + R41)
						
						y  = x1 + num[1]*u
						
						x1_0 = x1
						if(y > 1e-12 or -y >1e-12) then
							u_out = 1/y
						end
						
						
" 
/>
		</Algorithm>
	</BasicFB>
</FBType>



